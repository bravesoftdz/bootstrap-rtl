
@import '_variables';

/*
 * Bootstrap framework RTL.
 * Author: Hussam Al-Zughaibi <hossam_zee@yahoo.com>.
 */

 /* Mixin. */

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-#{$class}-#{$i}";
  }
  #{$list} {
    float: right;
  }
}

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == offset) {
    .col-#{$class}-offset-#{$index} {
      margin-right: percentage(($index / $grid-columns));
      margin-left: 0;
    }
  }
}

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}

// Create grid for specific class
@mixin make-grid($class) {
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, offset);
}

/* HTML direction. */

html {
    direction: rtl;
}

/* Grid system. */

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-sm-min) {
  @include make-grid(sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: $screen-md-min) {
  @include make-grid(md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: $screen-lg-min) {
  @include make-grid(lg);
}

/** {
    -webkit-margin-start: 0;
    -webkit-padding-start: 0;
}*/

/* Typography. */

// Blockquotes
blockquote {
  border-right: 5px solid $blockquote-border-color;
  border-left: 0;
}


// Opposite alignment of blockquote
//
// Heads up: `blockquote.pull-right` has been deprecated as of v3.1.0.
.blockquote-reverse,
blockquote.pull-right {
  padding-left: 15px;
  padding-right: 0;
  border-left: 5px solid $blockquote-border-color;
  border-right: 0;
  text-align: left;
}

// Horizontal description lists
//
// Defaults to being stacked without any of the below styles applied, until the
// grid breakpoint is reached (default of ~768px).
.dl-horizontal {

  @media (min-width: $grid-float-breakpoint) {
    dt {
      float: right;
      clear: right;
      text-align: left;
    }
    dd {
      margin-right: $dl-horizontal-offset;
      margin-left: 0;
    }
  }
}

/* Tables. */

th {
    text-align: right;
}

/* TODO: Forms. */

/*.radio label,
.checkbox label {
    padding-left: 0;
    padding-right: 20px;
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
    margin-left: 0;
    margin-right: -20px;
}

.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.input-group-addon:first-child {
    border-right: 1px solid #ccc;
    border-left: 0;
}

.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

@media (min-width: 768px) {
    .form-horizontal .control-label {
        text-align: left;
    }
}

.has-feedback .form-control {
    padding-left: 42.5px;
    padding-right: 12px;
}

.form-control-feedback {
    right: auto;
    left: 0;
}*/

/* Dropdowns. */

.dropdown-menu {
  right: 0;
  left: auto;
  float: right;
  text-align: right;
}

/* Button groups. */

.btn-group > .btn,
.btn-group-vertical > .btn {
    float: right;
}

/*.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}*/

// Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
.btn-group > .btn:first-child {
  &:not(:last-child):not(.dropdown-toggle) {
    @include border-right-radius($border-radius-base);
    @include border-left-radius(0);
  }
}



.btn-toolbar .btn-group,
.btn-toolbar .input-group {
    float: right;
}

.btn-group > .btn-group:last-child > .btn:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}

.btn-group .btn+.btn, .btn-group .btn+.btn-group, .btn-group .btn-group+.btn,
.btn-group .btn-group+.btn-group {
    margin-right: -1px;
    margin-left: 0;
}

.btn-group-justified>.btn, .btn-group-justified>.btn-group {
    float: none;
}

/* Input groups. */

.input-group-addon:last-child {
    border-right: 0;
    border-left: 1px solid #ccc;
}

/* TODO: There is an issue with the middle button. */
/* It could be ignored for now. */

/* Navs. */

.nav-tabs > li {
    float: right;
}

.nav-tabs > li + li {
    margin-right: 2px;
    margin-left: 0;
}

.nav-pills > li {
    float: right;
}

.nav-pills > li + li {
    margin-right: 2px;
    margin-left: 0;
}

.nav-stacked>li {
    float: none;
}

.nav-justified>li {
    float: none;
}

/* Navbar. */

@media (min-width: 768px) {
    .navbar-header {
        float: right;
    }
}

@media (min-width: 768px) {
    .navbar-nav {
        float: right;
        margin: 0;
    }

    .navbar-nav > li {
        float: right;
    }
}

.navbar-toggle {
    float: left;
    margin-right: auto;
    margin-left: 15px;
}

.navbar-brand {
    float: right;
}

@media (min-width: 768px) {
    .container > .navbar-header,
    .container-fluid > .navbar-header,
    .container > .navbar-collapse,
    .container-fluid > .navbar-collapse {
        margin-right: 15px;
        margin-left: 15px;
    }
}

@media (min-width: 768px) {
    .navbar-text {
        float: right;
    }
}

/* Breadcrumbs. */

.pagination > li > a,
.pagination > li > span {
    float: right;
    margin-right: -1px;
    margin-left: 0;
}

.pagination > li:first-child > a,
.pagination > li:first-child > span {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.pagination > li:last-child > a,
.pagination > li:last-child > span {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

/* Pagination. */

.pager .next > a,
.pager .next > span {
    float: left;
}

.pager .previous > a,
.pager .previous > span {
    float: right;
}

/* Progress bars. */

.progress-bar {
    float: right;
}

/* List group. */

.list-group-item > .badge {
    float: left;
}

/* Modals. */

.close {
    float: left;
}

/* TODO: Carousel. */
